@using BlazorRealworld.Model
@page "/editor"
@page "/editor/{Slug}"
@inject ApiClient api
@inject IUriHelper uriHelper

@if (articleModel != null)
{
<div class="editor-page">
    <div class="container page">
        <div class="row">

            <div class="col-md-10 offset-md-1 col-xs-12">
                <ErrorMessages Errors=@response.errors />
                <form>
                    <fieldset>
                        <fieldset class="form-group">
                            <input type="text" class="form-control form-control-lg" placeholder="Article Title" bind="@articleModel.title" />
                        </fieldset>
                        <fieldset class="form-group">
                            <input type="text" class="form-control" placeholder="What's this article about?" bind="@articleModel.description" />
                        </fieldset>
                        <fieldset class="form-group">
                            <textarea class="form-control" rows="8" placeholder="Write your article (in markdown)" bind="@articleModel.body">@articleModel.body</textarea>
                        </fieldset>
                        <fieldset class="form-group">
                            <input type="text" class="form-control" placeholder="Enter tags" bind="@tagString" /><div class="tag-list"></div>
                        </fieldset>
                        <button class="btn btn-lg pull-xs-right btn-primary" type="button" onclick="@Submit">
                            Publish
                        </button>
                    </fieldset>
                </form>
            </div>

        </div>
    </div>
</div>
}

@functions
{
    public string Slug { get; set; }

    ArticleModel articleModel = null;
    ArticleResponse response = new ArticleResponse();
    string tagString = "";

    protected override async Task OnInitAsync()
    {
        if (Slug == null)
        {
            articleModel = new ArticleModel();
        }
        else
        {
            articleModel = await api.GetArticleAsync(Slug);
        }
    }

    async Task Submit()
    {
        articleModel.tagList = tagString.Split(' ');
        response = await api.SaveArticleAsync(articleModel);
        var postedArticle = response?.article;

        if (postedArticle != null)
        {
            uriHelper.NavigateTo($"/article/{postedArticle.slug}");
        }
        else
            // Show errors
            StateHasChanged();
    }
}
